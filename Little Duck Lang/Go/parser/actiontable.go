// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			shift(2), // program
			nil,      // id
			nil,      // semcolon
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // tint
			nil,      // tfloat
			nil,      // tstring
			nil,      // leftkey
			nil,      // rightkey
			nil,      // equals
			nil,      // less
			nil,      // greater
			nil,      // diff
			nil,      // if
			nil,      // leftpar
			nil,      // rightpar
			nil,      // then
			nil,      // else
			nil,      // ex
			nil,      // term
			nil,      // print
			nil,      // string
			nil,      // int
			nil,      // float
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // program
			nil,          // id
			nil,          // semcolon
			nil,          // var
			nil,          // colon
			nil,          // comma
			nil,          // tint
			nil,          // tfloat
			nil,          // tstring
			nil,          // leftkey
			nil,          // rightkey
			nil,          // equals
			nil,          // less
			nil,          // greater
			nil,          // diff
			nil,          // if
			nil,          // leftpar
			nil,          // rightpar
			nil,          // then
			nil,          // else
			nil,          // ex
			nil,          // term
			nil,          // print
			nil,          // string
			nil,          // int
			nil,          // float
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			shift(3), // id
			nil,      // semcolon
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // tint
			nil,      // tfloat
			nil,      // tstring
			nil,      // leftkey
			nil,      // rightkey
			nil,      // equals
			nil,      // less
			nil,      // greater
			nil,      // diff
			nil,      // if
			nil,      // leftpar
			nil,      // rightpar
			nil,      // then
			nil,      // else
			nil,      // ex
			nil,      // term
			nil,      // print
			nil,      // string
			nil,      // int
			nil,      // float
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			nil,      // id
			shift(4), // semcolon
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // tint
			nil,      // tfloat
			nil,      // tstring
			nil,      // leftkey
			nil,      // rightkey
			nil,      // equals
			nil,      // less
			nil,      // greater
			nil,      // diff
			nil,      // if
			nil,      // leftpar
			nil,      // rightpar
			nil,      // then
			nil,      // else
			nil,      // ex
			nil,      // term
			nil,      // print
			nil,      // string
			nil,      // int
			nil,      // float
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			nil,      // id
			nil,      // semcolon
			shift(7), // var
			nil,      // colon
			nil,      // comma
			nil,      // tint
			nil,      // tfloat
			nil,      // tstring
			shift(8), // leftkey
			nil,      // rightkey
			nil,      // equals
			nil,      // less
			nil,      // greater
			nil,      // diff
			nil,      // if
			nil,      // leftpar
			nil,      // rightpar
			nil,      // then
			nil,      // else
			nil,      // ex
			nil,      // term
			nil,      // print
			nil,      // string
			nil,      // int
			nil,      // float
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // program
			nil,      // id
			nil,      // semcolon
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // tint
			nil,      // tfloat
			nil,      // tstring
			shift(8), // leftkey
			nil,      // rightkey
			nil,      // equals
			nil,      // less
			nil,      // greater
			nil,      // diff
			nil,      // if
			nil,      // leftpar
			nil,      // rightpar
			nil,      // then
			nil,      // else
			nil,      // ex
			nil,      // term
			nil,      // print
			nil,      // string
			nil,      // int
			nil,      // float
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // $, reduce: Programa
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(10), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(13), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			shift(15), // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			shift(20), // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			shift(21), // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: Programa
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			reduce(6), // colon, reduce: Recids
			shift(22), // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			reduce(3), // leftkey, reduce: Vars
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			shift(23), // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			shift(24), // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			shift(25), // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(12), // $, reduce: Bloque
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			reduce(14), // rightkey, reduce: Estatutos
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			shift(20),  // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			shift(21),  // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(15), // id, reduce: Estatuto
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			reduce(15), // rightkey, reduce: Estatuto
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			reduce(15), // if, reduce: Estatuto
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			reduce(15), // print, reduce: Estatuto
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(16), // id, reduce: Estatuto
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			reduce(16), // rightkey, reduce: Estatuto
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			reduce(16), // if, reduce: Estatuto
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			reduce(16), // print, reduce: Estatuto
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(17), // id, reduce: Estatuto
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			reduce(17), // rightkey, reduce: Estatuto
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			reduce(17), // if, reduce: Estatuto
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			reduce(17), // print, reduce: Estatuto
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(27), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(28), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(10), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			shift(31), // tint
			shift(32), // tfloat
			shift(33), // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(34), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(37), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(39), // ex
			nil,       // term
			nil,       // print
			shift(42), // string
			shift(43), // int
			shift(44), // float
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(11), // $, reduce: Bloque
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			reduce(13), // rightkey, reduce: Estatutos
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(45), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(48), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(50), // ex
			nil,       // term
			nil,       // print
			shift(53), // string
			shift(54), // int
			shift(55), // float
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(59), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(61), // ex
			nil,       // term
			nil,       // print
			shift(65), // string
			shift(66), // int
			shift(67), // float
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			reduce(7), // colon, reduce: Recids
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			shift(68), // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			reduce(8), // semcolon, reduce: Tipo
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			reduce(9), // semcolon, reduce: Tipo
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(10), // semcolon, reduce: Tipo
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(39), // semcolon, reduce: Cte
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(39), // less, reduce: Cte
			reduce(39), // greater, reduce: Cte
			reduce(39), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(39), // ex, reduce: Cte
			reduce(39), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			shift(69), // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(22), // semcolon, reduce: Expresion
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			shift(70),  // less
			shift(71),  // greater
			shift(72),  // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(45), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(48), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(50), // ex
			nil,       // term
			nil,       // print
			shift(53), // string
			shift(54), // int
			shift(55), // float
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(26), // semcolon, reduce: Exp
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(26), // less, reduce: Exp
			reduce(26), // greater, reduce: Exp
			reduce(26), // diff, reduce: Exp
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(75),  // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(34), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			shift(42), // string
			shift(43), // int
			shift(44), // float
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(29), // semcolon, reduce: Termino
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(29), // less, reduce: Termino
			reduce(29), // greater, reduce: Termino
			reduce(29), // diff, reduce: Termino
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(29), // ex, reduce: Termino
			shift(78),  // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(33), // semcolon, reduce: Factor
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(33), // less, reduce: Factor
			reduce(33), // greater, reduce: Factor
			reduce(33), // diff, reduce: Factor
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(33), // ex, reduce: Factor
			reduce(33), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(41), // semcolon, reduce: Cte
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(41), // less, reduce: Cte
			reduce(41), // greater, reduce: Cte
			reduce(41), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(41), // ex, reduce: Cte
			reduce(41), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(40), // semcolon, reduce: Cte
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(40), // less, reduce: Cte
			reduce(40), // greater, reduce: Cte
			reduce(40), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(40), // ex, reduce: Cte
			reduce(40), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(42), // semcolon, reduce: Cte
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(42), // less, reduce: Cte
			reduce(42), // greater, reduce: Cte
			reduce(42), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(42), // ex, reduce: Cte
			reduce(42), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(39), // less, reduce: Cte
			reduce(39), // greater, reduce: Cte
			reduce(39), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			reduce(39), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(39), // ex, reduce: Cte
			reduce(39), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			shift(79), // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			shift(80),  // less
			shift(81),  // greater
			shift(82),  // diff
			nil,        // if
			nil,        // leftpar
			reduce(22), // rightpar, reduce: Expresion
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(45), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(48), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(50), // ex
			nil,       // term
			nil,       // print
			shift(53), // string
			shift(54), // int
			shift(55), // float
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(26), // less, reduce: Exp
			reduce(26), // greater, reduce: Exp
			reduce(26), // diff, reduce: Exp
			nil,        // if
			nil,        // leftpar
			reduce(26), // rightpar, reduce: Exp
			nil,        // then
			nil,        // else
			shift(85),  // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(45), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			shift(53), // string
			shift(54), // int
			shift(55), // float
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(29), // less, reduce: Termino
			reduce(29), // greater, reduce: Termino
			reduce(29), // diff, reduce: Termino
			nil,        // if
			nil,        // leftpar
			reduce(29), // rightpar, reduce: Termino
			nil,        // then
			nil,        // else
			reduce(29), // ex, reduce: Termino
			shift(88),  // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(33), // less, reduce: Factor
			reduce(33), // greater, reduce: Factor
			reduce(33), // diff, reduce: Factor
			nil,        // if
			nil,        // leftpar
			reduce(33), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(33), // ex, reduce: Factor
			reduce(33), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(41), // less, reduce: Cte
			reduce(41), // greater, reduce: Cte
			reduce(41), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			reduce(41), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(41), // ex, reduce: Cte
			reduce(41), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(40), // less, reduce: Cte
			reduce(40), // greater, reduce: Cte
			reduce(40), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			reduce(40), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(40), // ex, reduce: Cte
			reduce(40), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(42), // less, reduce: Cte
			reduce(42), // greater, reduce: Cte
			reduce(42), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			reduce(42), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(42), // ex, reduce: Cte
			reduce(42), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(39), // comma, reduce: Cte
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(39), // less, reduce: Cte
			reduce(39), // greater, reduce: Cte
			reduce(39), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			reduce(39), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(39), // ex, reduce: Cte
			reduce(39), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			shift(89),  // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(37), // rightpar, reduce: Recesc
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(22), // comma, reduce: Expresion
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			shift(90),  // less
			shift(91),  // greater
			shift(92),  // diff
			nil,        // if
			nil,        // leftpar
			reduce(22), // rightpar, reduce: Expresion
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(45), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(48), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(50), // ex
			nil,       // term
			nil,       // print
			shift(53), // string
			shift(54), // int
			shift(55), // float
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(26), // comma, reduce: Exp
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(26), // less, reduce: Exp
			reduce(26), // greater, reduce: Exp
			reduce(26), // diff, reduce: Exp
			nil,        // if
			nil,        // leftpar
			reduce(26), // rightpar, reduce: Exp
			nil,        // then
			nil,        // else
			shift(95),  // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			shift(97), // string
			shift(66), // int
			shift(67), // float
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(29), // comma, reduce: Termino
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(29), // less, reduce: Termino
			reduce(29), // greater, reduce: Termino
			reduce(29), // diff, reduce: Termino
			nil,        // if
			nil,        // leftpar
			reduce(29), // rightpar, reduce: Termino
			nil,        // then
			nil,        // else
			reduce(29), // ex, reduce: Termino
			shift(99),  // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(33), // comma, reduce: Factor
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(33), // less, reduce: Factor
			reduce(33), // greater, reduce: Factor
			reduce(33), // diff, reduce: Factor
			nil,        // if
			nil,        // leftpar
			reduce(33), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(33), // ex, reduce: Factor
			reduce(33), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			shift(100), // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			shift(101), // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(41), // less, reduce: Cte
			reduce(41), // greater, reduce: Cte
			reduce(41), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			reduce(38), // rightpar, reduce: Recesc
			nil,        // then
			nil,        // else
			reduce(41), // ex, reduce: Cte
			reduce(41), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(40), // comma, reduce: Cte
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(40), // less, reduce: Cte
			reduce(40), // greater, reduce: Cte
			reduce(40), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			reduce(40), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(40), // ex, reduce: Cte
			reduce(40), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(42), // comma, reduce: Cte
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(42), // less, reduce: Cte
			reduce(42), // greater, reduce: Cte
			reduce(42), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			reduce(42), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(42), // ex, reduce: Cte
			reduce(42), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(10), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			reduce(5), // leftkey, reduce: Recvars
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(18), // id, reduce: Asignacion
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			reduce(18), // rightkey, reduce: Asignacion
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			reduce(18), // if, reduce: Asignacion
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			reduce(18), // print, reduce: Asignacion
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(103), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(105), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(107), // ex
			nil,        // term
			nil,        // print
			shift(110), // string
			shift(111), // int
			shift(112), // float
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(103), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(105), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(107), // ex
			nil,        // term
			nil,        // print
			shift(110), // string
			shift(111), // int
			shift(112), // float
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(103), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(105), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(107), // ex
			nil,        // term
			nil,        // print
			shift(110), // string
			shift(111), // int
			shift(112), // float
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			shift(115), // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(25), // semcolon, reduce: Exp
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(25), // less, reduce: Exp
			reduce(25), // greater, reduce: Exp
			reduce(25), // diff, reduce: Exp
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(34), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(37), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(39), // ex
			nil,       // term
			nil,       // print
			shift(42), // string
			shift(43), // int
			shift(44), // float
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(32), // semcolon, reduce: Factor
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(32), // less, reduce: Factor
			reduce(32), // greater, reduce: Factor
			reduce(32), // diff, reduce: Factor
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(32), // ex, reduce: Factor
			reduce(32), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(28), // semcolon, reduce: Termino
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(28), // less, reduce: Termino
			reduce(28), // greater, reduce: Termino
			reduce(28), // diff, reduce: Termino
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(28), // ex, reduce: Termino
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(34), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(37), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(39), // ex
			nil,       // term
			nil,       // print
			shift(42), // string
			shift(43), // int
			shift(44), // float
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			shift(118), // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(119), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(121), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(123), // ex
			nil,        // term
			nil,        // print
			shift(126), // string
			shift(127), // int
			shift(128), // float
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(119), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(121), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(123), // ex
			nil,        // term
			nil,        // print
			shift(126), // string
			shift(127), // int
			shift(128), // float
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(119), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(121), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(123), // ex
			nil,        // term
			nil,        // print
			shift(126), // string
			shift(127), // int
			shift(128), // float
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			shift(131), // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(25), // less, reduce: Exp
			reduce(25), // greater, reduce: Exp
			reduce(25), // diff, reduce: Exp
			nil,        // if
			nil,        // leftpar
			reduce(25), // rightpar, reduce: Exp
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(45), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(48), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(50), // ex
			nil,       // term
			nil,       // print
			shift(53), // string
			shift(54), // int
			shift(55), // float
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(32), // less, reduce: Factor
			reduce(32), // greater, reduce: Factor
			reduce(32), // diff, reduce: Factor
			nil,        // if
			nil,        // leftpar
			reduce(32), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(32), // ex, reduce: Factor
			reduce(32), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(28), // less, reduce: Termino
			reduce(28), // greater, reduce: Termino
			reduce(28), // diff, reduce: Termino
			nil,        // if
			nil,        // leftpar
			reduce(28), // rightpar, reduce: Termino
			nil,        // then
			nil,        // else
			reduce(28), // ex, reduce: Termino
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(45), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(48), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(50), // ex
			nil,       // term
			nil,       // print
			shift(53), // string
			shift(54), // int
			shift(55), // float
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(59), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(61), // ex
			nil,       // term
			nil,       // print
			shift(65), // string
			shift(66), // int
			shift(67), // float
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(135), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(137), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(139), // ex
			nil,        // term
			nil,        // print
			shift(142), // string
			shift(143), // int
			shift(144), // float
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(135), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(137), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(139), // ex
			nil,        // term
			nil,        // print
			shift(142), // string
			shift(143), // int
			shift(144), // float
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(135), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(137), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(139), // ex
			nil,        // term
			nil,        // print
			shift(142), // string
			shift(143), // int
			shift(144), // float
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			shift(147), // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(25), // comma, reduce: Exp
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(25), // less, reduce: Exp
			reduce(25), // greater, reduce: Exp
			reduce(25), // diff, reduce: Exp
			nil,        // if
			nil,        // leftpar
			reduce(25), // rightpar, reduce: Exp
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(59), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(61), // ex
			nil,       // term
			nil,       // print
			shift(97), // string
			shift(66), // int
			shift(67), // float
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(32), // comma, reduce: Factor
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(32), // less, reduce: Factor
			reduce(32), // greater, reduce: Factor
			reduce(32), // diff, reduce: Factor
			nil,        // if
			nil,        // leftpar
			reduce(32), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(32), // ex, reduce: Factor
			reduce(32), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(41), // comma, reduce: Cte
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(41), // less, reduce: Cte
			reduce(41), // greater, reduce: Cte
			reduce(41), // diff, reduce: Cte
			nil,        // if
			nil,        // leftpar
			reduce(41), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(41), // ex, reduce: Cte
			reduce(41), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(28), // comma, reduce: Termino
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(28), // less, reduce: Termino
			reduce(28), // greater, reduce: Termino
			reduce(28), // diff, reduce: Termino
			nil,        // if
			nil,        // leftpar
			reduce(28), // rightpar, reduce: Termino
			nil,        // then
			nil,        // else
			reduce(28), // ex, reduce: Termino
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(59), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(61), // ex
			nil,       // term
			nil,       // print
			shift(97), // string
			shift(66), // int
			shift(67), // float
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			shift(150), // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(56), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(59), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(61), // ex
			nil,       // term
			nil,       // print
			shift(65), // string
			shift(66), // int
			shift(67), // float
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			nil,       // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			reduce(4), // leftkey, reduce: Recvars
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			nil,       // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			nil,       // ex
			nil,       // term
			nil,       // print
			nil,       // string
			nil,       // int
			nil,       // float
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(39), // semcolon, reduce: Cte
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(39), // ex, reduce: Cte
			reduce(39), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(19), // semcolon, reduce: Expresion
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(45), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(48), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(50), // ex
			nil,       // term
			nil,       // print
			shift(53), // string
			shift(54), // int
			shift(55), // float
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(26), // semcolon, reduce: Exp
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(154), // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(103), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			shift(110), // string
			shift(111), // int
			shift(112), // float
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(29), // semcolon, reduce: Termino
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(29), // ex, reduce: Termino
			shift(157), // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(33), // semcolon, reduce: Factor
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(33), // ex, reduce: Factor
			reduce(33), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(41), // semcolon, reduce: Cte
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(41), // ex, reduce: Cte
			reduce(41), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(40), // semcolon, reduce: Cte
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(40), // ex, reduce: Cte
			reduce(40), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(42), // semcolon, reduce: Cte
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(42), // ex, reduce: Cte
			reduce(42), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(20), // semcolon, reduce: Expresion
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(21), // semcolon, reduce: Expresion
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(31), // semcolon, reduce: Factor
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(31), // less, reduce: Factor
			reduce(31), // greater, reduce: Factor
			reduce(31), // diff, reduce: Factor
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(31), // ex, reduce: Factor
			reduce(31), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(27), // semcolon, reduce: Recexp
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(27), // less, reduce: Recexp
			reduce(27), // greater, reduce: Recexp
			reduce(27), // diff, reduce: Recexp
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(30), // semcolon, reduce: Recterm
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(30), // less, reduce: Recterm
			reduce(30), // greater, reduce: Recterm
			reduce(30), // diff, reduce: Recterm
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(30), // ex, reduce: Recterm
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			shift(159), // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(39), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(39), // ex, reduce: Cte
			reduce(39), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(19), // rightpar, reduce: Expresion
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(45), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(48), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(50), // ex
			nil,       // term
			nil,       // print
			shift(53), // string
			shift(54), // int
			shift(55), // float
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(26), // rightpar, reduce: Exp
			nil,        // then
			nil,        // else
			shift(162), // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(119), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			shift(126), // string
			shift(127), // int
			shift(128), // float
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(29), // rightpar, reduce: Termino
			nil,        // then
			nil,        // else
			reduce(29), // ex, reduce: Termino
			shift(165), // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(33), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(33), // ex, reduce: Factor
			reduce(33), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(41), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(41), // ex, reduce: Cte
			reduce(41), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(40), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(40), // ex, reduce: Cte
			reduce(40), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(42), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(42), // ex, reduce: Cte
			reduce(42), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(20), // rightpar, reduce: Expresion
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(21), // rightpar, reduce: Expresion
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(31), // less, reduce: Factor
			reduce(31), // greater, reduce: Factor
			reduce(31), // diff, reduce: Factor
			nil,        // if
			nil,        // leftpar
			reduce(31), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(31), // ex, reduce: Factor
			reduce(31), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(27), // less, reduce: Recexp
			reduce(27), // greater, reduce: Recexp
			reduce(27), // diff, reduce: Recexp
			nil,        // if
			nil,        // leftpar
			reduce(27), // rightpar, reduce: Recexp
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(30), // less, reduce: Recterm
			reduce(30), // greater, reduce: Recterm
			reduce(30), // diff, reduce: Recterm
			nil,        // if
			nil,        // leftpar
			reduce(30), // rightpar, reduce: Recterm
			nil,        // then
			nil,        // else
			reduce(30), // ex, reduce: Recterm
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(35), // rightpar, reduce: Recesc
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(39), // comma, reduce: Cte
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(39), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(39), // ex, reduce: Cte
			reduce(39), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(19), // comma, reduce: Expresion
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(19), // rightpar, reduce: Expresion
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // program
			shift(45), // id
			nil,       // semcolon
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // tint
			nil,       // tfloat
			nil,       // tstring
			nil,       // leftkey
			nil,       // rightkey
			nil,       // equals
			nil,       // less
			nil,       // greater
			nil,       // diff
			nil,       // if
			shift(48), // leftpar
			nil,       // rightpar
			nil,       // then
			nil,       // else
			shift(50), // ex
			nil,       // term
			nil,       // print
			shift(53), // string
			shift(54), // int
			shift(55), // float
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(26), // comma, reduce: Exp
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(26), // rightpar, reduce: Exp
			nil,        // then
			nil,        // else
			shift(168), // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(135), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			shift(142), // string
			shift(143), // int
			shift(144), // float
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(29), // comma, reduce: Termino
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(29), // rightpar, reduce: Termino
			nil,        // then
			nil,        // else
			reduce(29), // ex, reduce: Termino
			shift(171), // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(33), // comma, reduce: Factor
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(33), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(33), // ex, reduce: Factor
			reduce(33), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(41), // comma, reduce: Cte
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(41), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(41), // ex, reduce: Cte
			reduce(41), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(40), // comma, reduce: Cte
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(40), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(40), // ex, reduce: Cte
			reduce(40), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(42), // comma, reduce: Cte
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(42), // rightpar, reduce: Cte
			nil,        // then
			nil,        // else
			reduce(42), // ex, reduce: Cte
			reduce(42), // term, reduce: Cte
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(20), // comma, reduce: Expresion
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(20), // rightpar, reduce: Expresion
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(21), // comma, reduce: Expresion
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(21), // rightpar, reduce: Expresion
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(31), // comma, reduce: Factor
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(31), // less, reduce: Factor
			reduce(31), // greater, reduce: Factor
			reduce(31), // diff, reduce: Factor
			nil,        // if
			nil,        // leftpar
			reduce(31), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(31), // ex, reduce: Factor
			reduce(31), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(27), // comma, reduce: Recexp
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(27), // less, reduce: Recexp
			reduce(27), // greater, reduce: Recexp
			reduce(27), // diff, reduce: Recexp
			nil,        // if
			nil,        // leftpar
			reduce(27), // rightpar, reduce: Recexp
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(30), // comma, reduce: Recterm
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			reduce(30), // less, reduce: Recterm
			reduce(30), // greater, reduce: Recterm
			reduce(30), // diff, reduce: Recterm
			nil,        // if
			nil,        // leftpar
			reduce(30), // rightpar, reduce: Recterm
			nil,        // then
			nil,        // else
			reduce(30), // ex, reduce: Recterm
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(34), // id, reduce: Escritura
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			reduce(34), // rightkey, reduce: Escritura
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			reduce(34), // if, reduce: Escritura
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			reduce(34), // print, reduce: Escritura
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(36), // rightpar, reduce: Recesc
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			shift(172), // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(25), // semcolon, reduce: Exp
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(103), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(105), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(107), // ex
			nil,        // term
			nil,        // print
			shift(110), // string
			shift(111), // int
			shift(112), // float
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(32), // semcolon, reduce: Factor
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(32), // ex, reduce: Factor
			reduce(32), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(28), // semcolon, reduce: Termino
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(28), // ex, reduce: Termino
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(103), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(105), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(107), // ex
			nil,        // term
			nil,        // print
			shift(110), // string
			shift(111), // int
			shift(112), // float
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			shift(175), // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			shift(176), // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			shift(178), // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			shift(20),  // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			shift(21),  // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			shift(179), // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(25), // rightpar, reduce: Exp
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(119), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(121), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(123), // ex
			nil,        // term
			nil,        // print
			shift(126), // string
			shift(127), // int
			shift(128), // float
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(32), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(32), // ex, reduce: Factor
			reduce(32), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(28), // rightpar, reduce: Termino
			nil,        // then
			nil,        // else
			reduce(28), // ex, reduce: Termino
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(119), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(121), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(123), // ex
			nil,        // term
			nil,        // print
			shift(126), // string
			shift(127), // int
			shift(128), // float
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			shift(182), // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(25), // comma, reduce: Exp
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(25), // rightpar, reduce: Exp
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(135), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(137), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(139), // ex
			nil,        // term
			nil,        // print
			shift(142), // string
			shift(143), // int
			shift(144), // float
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(32), // comma, reduce: Factor
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(32), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(32), // ex, reduce: Factor
			reduce(32), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(28), // comma, reduce: Termino
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(28), // rightpar, reduce: Termino
			nil,        // then
			nil,        // else
			reduce(28), // ex, reduce: Termino
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(135), // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			shift(137), // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			shift(139), // ex
			nil,        // term
			nil,        // print
			shift(142), // string
			shift(143), // int
			shift(144), // float
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(31), // semcolon, reduce: Factor
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(31), // ex, reduce: Factor
			reduce(31), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(27), // semcolon, reduce: Recexp
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(30), // semcolon, reduce: Recterm
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			reduce(30), // ex, reduce: Recterm
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(23), // id, reduce: Condicion
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			reduce(23), // rightkey, reduce: Condicion
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			reduce(23), // if, reduce: Condicion
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			reduce(23), // print, reduce: Condicion
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			shift(186), // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			shift(187), // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(12), // semcolon, reduce: Bloque
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			reduce(12), // else, reduce: Bloque
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(31), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(31), // ex, reduce: Factor
			reduce(31), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(27), // rightpar, reduce: Recexp
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(30), // rightpar, reduce: Recterm
			nil,        // then
			nil,        // else
			reduce(30), // ex, reduce: Recterm
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(31), // comma, reduce: Factor
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(31), // rightpar, reduce: Factor
			nil,        // then
			nil,        // else
			reduce(31), // ex, reduce: Factor
			reduce(31), // term, reduce: Factor
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(27), // comma, reduce: Recexp
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(27), // rightpar, reduce: Recexp
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			reduce(30), // comma, reduce: Recterm
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			reduce(30), // rightpar, reduce: Recterm
			nil,        // then
			nil,        // else
			reduce(30), // ex, reduce: Recterm
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			shift(188), // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			shift(13),  // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			shift(190), // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			shift(20),  // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			shift(21),  // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(11), // semcolon, reduce: Bloque
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			reduce(11), // else, reduce: Bloque
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			reduce(24), // id, reduce: Condicion
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			reduce(24), // rightkey, reduce: Condicion
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			reduce(24), // if, reduce: Condicion
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			reduce(24), // print, reduce: Condicion
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			nil,        // semcolon
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			shift(191), // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(12), // semcolon, reduce: Bloque
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // program
			nil,        // id
			reduce(11), // semcolon, reduce: Bloque
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // tint
			nil,        // tfloat
			nil,        // tstring
			nil,        // leftkey
			nil,        // rightkey
			nil,        // equals
			nil,        // less
			nil,        // greater
			nil,        // diff
			nil,        // if
			nil,        // leftpar
			nil,        // rightpar
			nil,        // then
			nil,        // else
			nil,        // ex
			nil,        // term
			nil,        // print
			nil,        // string
			nil,        // int
			nil,        // float
		},
	},
}
